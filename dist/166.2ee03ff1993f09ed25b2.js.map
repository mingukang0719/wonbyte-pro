{"version":3,"file":"166.2ee03ff1993f09ed25b2.js","mappings":"sIAkPA,QAjPA,MACEA,WAAAA,GACEC,KAAKC,SAAW,QAChBD,KAAKE,UAAY,OACnB,CAEAC,WAAAA,CAAYC,GACV,MAAM,MAAEC,EAAQ,YAAW,OAAEC,EAAS,IAAOF,EAE7C,IAIE,MAAO,CACLG,SAAS,EACTC,YAJkBR,KAAKS,aAAaJ,EAAOC,GAK3CD,QAEJ,CAAE,MAAOK,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjC,IAAIE,MAAM,mBAAmBF,EAAMG,UAC3C,CACF,CAEAJ,YAAAA,CAAaJ,EAAOC,GAClB,MAAMQ,EAAYR,EAAOS,IAAIC,GACR,SAAfA,EAAMC,KACDjB,KAAKkB,sBAAsBF,GAE7B,IACNG,KAAK,MAER,MAAO,2JAKAd,0XAgBIL,KAAKC,gCACAD,KAAKE,2yDA+FnBY,6IAIET,aAAgB,IAAIe,MAAOC,mBAAmB,24BAqCpD,CAEAH,qBAAAA,CAAsBF,GACpB,MAAM,EACJM,EAAI,EAAC,EACLC,EAAI,EAAC,MACLC,EAAQ,IAAG,OACXC,EAAS,IAAG,KACZC,EAAO,GAAE,SACTC,EAAW,GAAE,WACbC,EAAa,eAAc,MAC3BC,EAAQ,WACNb,EAEJ,MAAO,4DAEGM,oBACDC,sBACEC,uBACCC,0BACGE,6BACGC,iCACPC,aACP7B,KAAK8B,WAAWJ,UACtB,CAEAI,UAAAA,CAAWJ,GACT,OAAKA,EACEA,EACJK,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACdA,QAAQ,MAAO,QAPA,EAQpB,CAGAC,cAAAA,CAAe3B,EAAOC,GACpB,MAAM2B,EAASjC,KAAKG,YAAY,CAAEE,QAAOC,WAEzC,GAAI2B,EAAO1B,QAAS,CAClB,MAAM2B,EAAgBC,OAAOC,KAAK,GAAI,SAAU,wCAGhD,OAFAF,EAAcG,SAASC,MAAML,EAAOzB,aACpC0B,EAAcG,SAASE,SAChB,CACT,CACA,OAAO,CACT,E","sources":["webpack://wonbyte-pro/./src/services/pdfService.js"],"sourcesContent":["// Frontend PDF service - generates HTML for browser printing\r\nclass PDFService {\r\n  constructor() {\r\n    this.A4_WIDTH = '210mm'\r\n    this.A4_HEIGHT = '297mm'\r\n  }\r\n\r\n  generatePDF(projectData) {\r\n    const { title = '한국어 학습 자료', blocks = [] } = projectData\r\n\r\n    try {\r\n      // Generate HTML content\r\n      const htmlContent = this.generateHTML(title, blocks)\r\n      \r\n      return {\r\n        success: true,\r\n        htmlContent,\r\n        title\r\n      }\r\n    } catch (error) {\r\n      console.error('PDF Generation Error:', error)\r\n      throw new Error(`PDF 생성에 실패했습니다: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  generateHTML(title, blocks) {\r\n    const blockHtml = blocks.map(block => {\r\n      if (block.type === 'text') {\r\n        return this.generateTextBlockHTML(block)\r\n      }\r\n      return ''\r\n    }).join('\\n')\r\n\r\n    return `<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>${title}</title>\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n  <style>\r\n    * {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n      font-family: 'Noto Sans KR', sans-serif;\r\n      background: #f5f5f5;\r\n      padding: 20px;\r\n    }\r\n\r\n    .page {\r\n      width: ${this.A4_WIDTH};\r\n      min-height: ${this.A4_HEIGHT};\r\n      background: white;\r\n      margin: 0 auto;\r\n      padding: 20mm;\r\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n      position: relative;\r\n    }\r\n\r\n    .block {\r\n      position: absolute;\r\n      word-wrap: break-word;\r\n      overflow-wrap: break-word;\r\n    }\r\n\r\n    .text-block {\r\n      white-space: pre-wrap;\r\n      line-height: 1.6;\r\n    }\r\n\r\n    @page {\r\n      size: A4;\r\n      margin: 0;\r\n    }\r\n\r\n    @media print {\r\n      body {\r\n        background: white;\r\n        padding: 0;\r\n      }\r\n      \r\n      .page {\r\n        box-shadow: none;\r\n        margin: 0;\r\n        width: 100%;\r\n        min-height: 100vh;\r\n      }\r\n    }\r\n\r\n    /* 인쇄용 스타일 */\r\n    .no-print {\r\n      display: none !important;\r\n    }\r\n\r\n    @media print {\r\n      .no-print {\r\n        display: none !important;\r\n      }\r\n    }\r\n\r\n    .print-controls {\r\n      text-align: center;\r\n      margin-top: 20px;\r\n      padding: 20px;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .print-button {\r\n      background: #3b82f6;\r\n      color: white;\r\n      border: none;\r\n      padding: 12px 24px;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      font-family: 'Noto Sans KR', sans-serif;\r\n      margin: 0 8px;\r\n      transition: background-color 0.2s;\r\n    }\r\n\r\n    .print-button:hover {\r\n      background: #2563eb;\r\n    }\r\n\r\n    .close-button {\r\n      background: #6b7280;\r\n      color: white;\r\n      border: none;\r\n      padding: 12px 24px;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n      font-family: 'Noto Sans KR', sans-serif;\r\n      margin: 0 8px;\r\n      transition: background-color 0.2s;\r\n    }\r\n\r\n    .close-button:hover {\r\n      background: #4b5563;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"page\">\r\n    ${blockHtml}\r\n    \r\n    <!-- 페이지 정보 -->\r\n    <div style=\"position: absolute; bottom: 10px; right: 10px; font-size: 10px; color: #999;\">\r\n      ${title} - 생성일: ${new Date().toLocaleDateString('ko-KR')}\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 인쇄 컨트롤 (화면에서만 보임) -->\r\n  <div class=\"print-controls no-print\">\r\n    <h2 style=\"margin-bottom: 16px; color: #1f2937;\">PDF 내보내기</h2>\r\n    <p style=\"margin-bottom: 20px; color: #666; font-size: 14px;\">\r\n      브라우저의 인쇄 기능을 사용하여 PDF로 저장할 수 있습니다.\r\n    </p>\r\n    <button class=\"print-button\" onclick=\"window.print()\">\r\n      📄 PDF로 저장 / 인쇄\r\n    </button>\r\n    <button class=\"close-button\" onclick=\"window.close()\">\r\n      ✕ 닫기\r\n    </button>\r\n  </div>\r\n\r\n  <script>\r\n    // 인쇄 완료 후 처리\r\n    window.addEventListener('afterprint', function() {\r\n      console.log('인쇄 완료');\r\n    });\r\n\r\n    // 키보드 단축키\r\n    document.addEventListener('keydown', function(e) {\r\n      if (e.ctrlKey && e.key === 'p') {\r\n        e.preventDefault();\r\n        window.print();\r\n      }\r\n      if (e.key === 'Escape') {\r\n        window.close();\r\n      }\r\n    });\r\n  </script>\r\n</body>\r\n</html>`\r\n  }\r\n\r\n  generateTextBlockHTML(block) {\r\n    const {\r\n      x = 0,\r\n      y = 0,\r\n      width = 200,\r\n      height = 100,\r\n      text = '',\r\n      fontSize = 16,\r\n      fontFamily = 'Noto Sans KR',\r\n      color = '#333333'\r\n    } = block\r\n\r\n    return `\r\n    <div class=\"block text-block\" style=\"\r\n      left: ${x}px;\r\n      top: ${y}px;\r\n      width: ${width}px;\r\n      height: ${height}px;\r\n      font-size: ${fontSize}px;\r\n      font-family: '${fontFamily}', sans-serif;\r\n      color: ${color};\r\n    \">${this.escapeHtml(text)}</div>`\r\n  }\r\n\r\n  escapeHtml(text) {\r\n    if (!text) return ''\r\n    return text\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;')\r\n      .replace(/\\n/g, '<br>')\r\n  }\r\n\r\n  // Open PDF preview in new window\r\n  openPDFPreview(title, blocks) {\r\n    const result = this.generatePDF({ title, blocks })\r\n    \r\n    if (result.success) {\r\n      const previewWindow = window.open('', '_blank', 'width=900,height=1200,scrollbars=yes')\r\n      previewWindow.document.write(result.htmlContent)\r\n      previewWindow.document.close()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport default PDFService"],"names":["constructor","this","A4_WIDTH","A4_HEIGHT","generatePDF","projectData","title","blocks","success","htmlContent","generateHTML","error","console","Error","message","blockHtml","map","block","type","generateTextBlockHTML","join","Date","toLocaleDateString","x","y","width","height","text","fontSize","fontFamily","color","escapeHtml","replace","openPDFPreview","result","previewWindow","window","open","document","write","close"],"sourceRoot":""}